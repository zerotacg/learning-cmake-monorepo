name: "Project A: Build and Package"

on:
  push:
    branches: [ "main", "feature/*" ]
    paths:
      - project-a/**
      - .github/workflows/project-a.yml
  pull_request:
    branches: [ "main" ]
    paths:
      - project-a/**
      - .github/workflows/project-a.yml

env:
  project_name: project-a
  build_type: Debug

jobs:
  configure:
    runs-on: ubuntu-latest
    outputs:
      build-output-dir: ${{ steps.strings.outputs.build-output-dir }}
      version: ${{ steps.strings.outputs.version }}
    steps:
      - name: Dependencies
        run: >
          sudo apt update;
          sudo apt install --yes
          ninja-build

      - uses: actions/checkout@v4

      - name: Set reusable strings
        id: strings
        shell: bash
        run: |
          echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"
          COMMIT_HASH=${{ github.sha }}
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          [ "$VERSION" == "main" ] && VERSION=latest
          VERSION="$VERSION+sha.${COMMIT_HASH:0:8}"
          echo VERSION=$VERSION
          echo "version=${VERSION}" >> "$GITHUB_OUTPUT"

      - name: Configure CMake
        run: >
          cmake -B ${{ steps.strings.outputs.build-output-dir }}
          -DCMAKE_BUILD_TYPE=${{env.build_type}}
          -DCPACK_PACKAGE_VERSION="${{ steps.strings.outputs.version }}"
          -S ${{ github.workspace }}/${{env.project_name}}
          -G Ninja

      - uses: actions/upload-artifact@v4
        with:
          name: configure-${{ steps.strings.outputs.version }}
          path: ${{ steps.strings.outputs.build-output-dir }}

  libraries:
    runs-on: ubuntu-latest
    needs: [ configure ]
    strategy:
      fail-fast: true
      matrix:
        target:
          - shared
          - special
    steps:
      - name: Dependencies
        run: >
          sudo apt update;
          sudo apt install --yes
          ninja-build

      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          pattern: configure-*
          merge-multiple: true
          path: ${{ needs.configure.outputs.build-output-dir }}

      - name: Build
        run: |
          VERBOSE=1 cmake --build ${{ needs.configure.outputs.build-output-dir }} --config ${{ env.build_type }} --target ${{ matrix.target }}

      - uses: actions/upload-artifact@v4
        with:
          name: libraries-${{ matrix.target }}-${{ needs.configure.outputs.version }}
          path: ${{ needs.configure.outputs.build-output-dir }}

  applications:
    runs-on: ubuntu-latest
    needs: [ configure, libraries ]
    strategy:
      fail-fast: true
      matrix:
        target:
          - alpha
          - beta
    steps:
      - name: Dependencies
        run: >
          sudo apt update;
          sudo apt install --yes
          ninja-build

      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          pattern: libraries-*
          merge-multiple: true
          path: ${{ needs.configure.outputs.build-output-dir }}

      - name: Build
        run: |
          VERBOSE=1 cmake --build ${{ needs.configure.outputs.build-output-dir }} --config ${{env.build_type}} --target ${{ matrix.target }}

      - uses: actions/upload-artifact@v4
        with:
          name: applications-${{ matrix.target }}
          path: ${{ needs.configure.outputs.build-output-dir }}

  package:
    runs-on: ubuntu-latest
    needs: [ libraries, applications ]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          pattern: applications-*
          merge-multiple: true
          path: ${{ needs.configure.outputs.build-output-dir }}

      - uses: actions/download-artifact@v4
        with:
          name: applications-beta
          path: ${{ needs.configure.outputs.build-output-dir }}

      - name: Package
        run: |
          cmake --build ${{ needs.configure.outputs.build-output-dir }} --config ${{env.build_type}} --target package
          tar --list --file ${{ needs.configure.outputs.build-output-dir }}/${{env.project_name}}-*.tar.gz

      - uses: actions/upload-artifact@v4
        with:
          name: package
          path: ${{ needs.configure.outputs.build-output-dir }}/${{env.project_name}}-*

