name: "Project A: Build and Package"

on:
  push:
    branches: [ "main", "feature/*" ]
    paths:
      - project-a/**
      - .github/workflows/project-a.yml
  pull_request:
    branches: [ "main" ]
    paths:
      - project-a/**
      - .github/workflows/project-a.yml

env:
  project_name: project-a
  build_type: Debug

jobs:
  configure:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Configure CMake
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_BUILD_TYPE=${{env.build_type}}
        -S ${{ github.workspace }}/${{env.project_name}}

    - uses: actions/upload-artifact@v4
      with:
        name: build-configure
        path: ${{ steps.strings.outputs.build-output-dir }}

  shared:
    runs-on: ubuntu-latest
    needs: [configure]

    steps:
    - uses: actions/checkout@v4

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - uses: actions/download-artifact@v4
      with:
        name: build-configure
        path: ${{ steps.strings.outputs.build-output-dir }}

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{env.build_type}} --target shared

    - uses: actions/upload-artifact@v4
      with:
        name: build-shared
        path: ${{ steps.strings.outputs.build-output-dir }}

  special:
    runs-on: ubuntu-latest
    needs: [configure]

    steps:
    - uses: actions/checkout@v4

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - uses: actions/download-artifact@v4
      with:
        name: build-configure
        path: ${{ steps.strings.outputs.build-output-dir }}

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{env.build_type}} --target special

    - uses: actions/upload-artifact@v4
      with:
        name: build-special
        path: ${{ steps.strings.outputs.build-output-dir }}

  alpha:
    runs-on: ubuntu-latest
    needs: [shared, special]

    steps:
      - uses: actions/checkout@v4

      - name: Set reusable strings
        id: strings
        shell: bash
        run: |
          echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

      - uses: actions/download-artifact@v4
        with:
          name: build-shared
          path: ${{ steps.strings.outputs.build-output-dir }}

      - uses: actions/download-artifact@v4
        with:
          name: build-special
          path: ${{ steps.strings.outputs.build-output-dir }}

      - name: Build
        run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{env.build_type}} --target alpha

      - uses: actions/upload-artifact@v4
        with:
          name: build-alpha
          path: ${{ steps.strings.outputs.build-output-dir }}

  beta:
    runs-on: ubuntu-latest
    needs: [shared]

    steps:
      - uses: actions/checkout@v4

      - name: Set reusable strings
        id: strings
        shell: bash
        run: |
          echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

      - uses: actions/download-artifact@v4
        with:
          name: build-shared
          path: ${{ steps.strings.outputs.build-output-dir }}

      - name: Build
        run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{env.build_type}} --target beta

      - uses: actions/upload-artifact@v4
        with:
          name: build-beta
          path: ${{ steps.strings.outputs.build-output-dir }}

  package:
    runs-on: ubuntu-latest
    needs: [shared, alpha, beta]

    steps:
      - uses: actions/checkout@v4

      - name: Set reusable strings
        id: strings
        shell: bash
        run: |
          echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          [ "$VERSION" == "main" ] && VERSION=latest
          echo VERSION=$VERSION
          echo "build-version=${VERSION}" >> "$GITHUB_OUTPUT"

      - uses: actions/download-artifact@v4
        with:
          path: ${{ steps.strings.outputs.build-output-dir }}

      - name: Configure CMake
        run: >
          cmake -B ${{ steps.strings.outputs.build-output-dir }}
          -DCPACK_PACKAGE_VERSION="${{ steps.strings.outputs.build-version }}"
          -S ${{ github.workspace }}/${{env.project_name}}

      - name: Package
        run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{env.build_type}} --target package

      - uses: actions/upload-artifact@v4
        with:
          name: package
          path: ${{ steps.strings.outputs.build-output-dir }}/${{env.project_name}}-*

