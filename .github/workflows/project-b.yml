name: "Project B: Build and Package"

on:
  push:
    branches: [ "main", "feature/*" ]
    paths:
      - .github/workflows/project-b.yml
      - project-b/**
      - CMakeLists.txt
      - CMakePresets.txt

  pull_request:
    branches: [ "main" ]
    paths:
      - .github/workflows/project-b.yml
      - project-b/**
      - CMakeLists.txt
      - CMakePresets.txt

  workflow_run:
    workflows: ["CI/CD Pipeline"]
    branches:
      - "main"
    types:
      - completed

env:
  project_name: project-b
  build_type: Debug

jobs:
  strings:
    runs-on: ubuntu-latest
    outputs:
      build-output-dir: ${{ steps.strings.outputs.build-output-dir }}
      build-version: ${{ steps.strings.outputs.build-version }}
    steps:
      - name: Set reusable strings
        id: strings
        shell: bash
        run: |
          echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"
          COMMIT_HASH=${{ github.sha }}
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          [ "$VERSION" == "main" ] && VERSION=latest
          VERSION="$VERSION+sha.${COMMIT_HASH:0:8}"
          echo VERSION=$VERSION
          echo "build-version=${VERSION}" >> "$GITHUB_OUTPUT"

  configure:
    needs: [ strings ]
    runs-on: ubuntu-latest
    steps:
      - uses: lukka/get-cmake@latest

      - uses: actions/checkout@v4

      - name: Download artifact
        id: download-artifact
        uses: dawidd6/action-download-artifact@v6
        with:
          workflow: project-a.yml
          workflow_conclusion: success
          branch: main
          event: push
          name: package-.*
          # Optional, name is treated as a regular expression if set true
          name_is_regexp: true
          # Optional, a directory where to extract artifact(s), defaults to the current directory
          path: build

      - name: Configure CMake
        run: cmake --preset ${{ env.project_name }}

      - uses: actions/upload-artifact@v4
        with:
          name: configure-${{ steps.strings.outputs.build-version }}
          path: ${{ needs.strings.outputs.build-output-dir }}

  build:
    runs-on: ubuntu-latest
    needs: [ strings, configure ]
    steps:
      - uses: lukka/get-cmake@latest

      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          pattern: configure-*
          path: ${{ needs.strings.outputs.build-output-dir }}

      - name: Build
        run: cmake --build --preset ${{ env.project_name }}

      - uses: actions/upload-artifact@v4
        with:
          name: build-${{ needs.strings.outputs.build-version }}
          path: ${{ needs.strings.outputs.build-output-dir }}

  package:
    runs-on: ubuntu-latest
    needs: [ strings, build ]

    steps:
      - uses: lukka/get-cmake@latest

      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          pattern: build-*
          path: ${{ needs.strings.outputs.build-output-dir }}

      - name: Package
        run: cpack --preset ${{ env.project_name }} -R "${{ needs.strings.outputs.build-version }}"

      - uses: actions/upload-artifact@v4
        with:
          name: package-${{ needs.strings.outputs.version }}
          path: ${{ needs.strings.outputs.build-output-dir }}/${{ env.project_name }}-*

