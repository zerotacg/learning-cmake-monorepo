name: Build Artifacts

on:
  push:
    branches: [ "main", "feature/*" ]
  pull_request:
    branches: [ "main" ]

jobs:
  libshared:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
        [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
        [ "$VERSION" == "main" ] && VERSION=latest
        echo VERSION=$VERSION
        echo "build-version=${VERSION}" >> "$GITHUB_OUTPUT"

    - name: Configure CMake
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCPACK_PACKAGE_VERSION="${{ steps.strings.outputs.build-version }}"
        -S ${{ github.workspace }}/libshared

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config Debug

    - name: Package
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config Debug --target package

    - uses: actions/upload-artifact@v4
      with:
        name: monorepo-libshared
        path: ${{ steps.strings.outputs.build-output-dir }}/monorepo-libshared-*.tar.gz

  alpha:
    runs-on: ubuntu-latest
    needs: [libshared]

    steps:
      - uses: actions/checkout@v4

      - name: Set reusable strings
        id: strings
        shell: bash
        run: |
          echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          [ "$VERSION" == "main" ] && VERSION=latest
          echo VERSION=$VERSION
          echo "build-version=${VERSION}" >> "$GITHUB_OUTPUT"

      - uses: actions/download-artifact@v4
        with:
          name: monorepo-libshared
          path: ${{ steps.strings.outputs.build-output-dir }}

      - name: Unpack Artifact
        shell: bash
        run: |
          find ${{ steps.strings.outputs.build-output-dir }}
          tar --verbose --extract --file=${{ steps.strings.outputs.build-output-dir }}/monorepo-libshared-${{ steps.strings.outputs.build-version }}.tar.gz
          find ${{ steps.strings.outputs.build-output-dir }}

      - name: Configure CMake
        run: >
          cmake -B ${{ steps.strings.outputs.build-output-dir }}
          -S ${{ github.workspace }}/alpha

      - name: Build
        run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config Debug
